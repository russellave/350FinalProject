DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;
CONTENT
BEGIN
0000 : 00101001110000000000000000000001; --   addi $r7, $r0, 1 #dummy screen code

0001 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0002 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0003 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0004 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0005 : 00000010100011100100000000001000; --   and $r10, $r7, $r4  #is dummy code

0006 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0007 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0008 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0009 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0010 : 00010010100000000000000000100010; -- 	bne $r10, $r0, check_dummy_input #process screen change

0011 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0012 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0013 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0014 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0015 : 01000000110000000000000000000010; -- 	lw $r3, 2($r0) #check controller input

0016 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0017 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0018 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0019 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0020 : 00010000000001100000000000000101; -- 	bne $r0, $r3, splash_transition

0021 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0022 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0023 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0024 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0025 : 00001000000000000000000000000000; --   j main #stay on screen until value is inputted

0026 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0027 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0028 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0029 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0030 : 00101001000000000000000000000001; --   addi $r4, $r0, 1 #update screen to dummy screen

0031 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0032 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0033 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0034 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0035 : 00111001000000000000000000000011; --   sw $r4, 3($r0) #output new screen to verilog

0036 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0037 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0038 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0039 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0040 : 00001000000000000000000000000000; --   j main #main will process the new screen

0041 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0042 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0043 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0044 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0045 : Not all fields specified in line were used; -- 	lw $r3, 2($r0) controller input  	#Find controller input

0046 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0047 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0048 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0049 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0050 : 00101001110000000000000000000001; --   addi $r7, $r0, 1 #back mode code for controller #not important for dummy screen

0051 : 00101010000000000000000000000010; --   addi $r8, $r0, 2 #save mode code for controller

0052 : 00101010010000000000000000000100; --   addi $r9, $r0, 4 #load mode code for controller

0053 : 00101010100000000000000000001000; --   addi $r10 $r0, 8 #play mode code for controller

0054 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0055 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0056 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0057 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0058 : 00000010110001101000000000001000; --   and $r11, $r3, $r8

0059 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0060 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0061 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0062 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0063 : 00010010110000000000000000001100; --   bne $r11, $r0, save_pattern

0064 : 00000011000001101001000000001000; --   and $r12, $r3, $r9

0065 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0066 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0067 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0068 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0069 : 00010011000000000000000001010001; --   bne $r12, $r0, load_pattern

0070 : 00000011010001101010000000001000; --   and $r13, $r3, $r10

0071 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0072 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0073 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0074 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0075 : 00010011010000000000000010101101; --   bne $r13, $r0, play_game

0076 : 00101111010000000000000000000000; --   addi $r29, $r0, 0 #increment counter for save pattern

0077 : 00101001000000000000000000000010; --   addi $r4, $r0, 2 #update screen in processor

0078 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0079 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0080 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0081 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0082 : 00111001000000000000000000000011; --   sw $r4, 3($r0) #output new screen to verilog

0083 : 01000000110000000000000000000010; --   lw $r3, 2($r0) #controller input

0084 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0085 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0086 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0087 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0088 : 00010000110000000000000000000000; --   bne $r3, $r0, rest_of_save_pattern #so that $r3 value isn't overwritten

0089 : 01000000010000000000000000000000; --   lw $r1, 0($r0) #sensor input

0090 : 00101011110000000000000000000001; --   addi $r15, $r0, 1 #back button/end saving

0091 : 00101100000000000000000000000010; --   addi $r16, $r0, 2 #save first location

0092 : 00101100010000000000000000000100; --   addi $r17, $r0, 4 #save second location

0093 : 00101100100000000000000000001000; --   addi $r18, $r0, 8 #save third location

0094 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0095 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0096 : 00000011110001101111000000001000; --   and $r15, $r3, $r15 #compare controller value to different cases

0097 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0098 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0099 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0100 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0101 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0102 : 00010011110000011111111110110011; --   bne $r15, $r0, splash_transition #back button hit, go to dummy screen

0103 : 00000100111000110010000000001100; --   or $r19, $r17, $r18 #any of next 3 buttons, valid save location (checks first 2)

0104 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0105 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0106 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0107 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0108 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0109 : 00000100111000010011000000001100; --   or $r19, $r16, $r19  #(checks third save location)

0110 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0111 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0112 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0113 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0114 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0115 : 00000100111001100011000000001000; --   and $r19, $r19, $r3 #19 has if valid save location

0116 : 00000100010000100000000000001000; --   and $r17, $r1, $r0 #is 1 empty?

0117 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0118 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0119 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0120 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0121 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0122 : 00000101001001110001000000001000; --   and $r20, $r19, $r17 #selected valid save location and sensor input present

0123 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0124 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0125 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0126 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0127 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0128 : 00010101000000000000000000000001; --   bne $r20, $r0, save_hit

0129 : 00001000000000000000000001011001; -- 	j rest_of_save_pattern

0130 : 00000101010001110000000000001000; --   and $r21, $r3, $r16 #check if controller is first save location

0131 : 00000101100001110001000000001000; --   and $r22, $r3, $r17

0132 : 00000101110001110010000000001000; --   and $r23, $r3, $r18

0133 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0134 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0135 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0136 : 00010000001010100000000000000010; --   bne $r0, $r21, save_first_location

0137 : 00010000001011000000000000000100; --   bne $r0, $r22, save_second_location

0138 : 00010000001011100000000000000110; --   bne $r0, $r23, save_third_location

0139 : 00111000011110100000000111110100; --   sw $r1, 500($r29)

0140 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0141 : 00001000000000000000000001011001; --   j rest_of_save_pattern

0142 : 00111000011110100000001111101000; --   sw $r1, 1000($r29)

0143 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0144 : 00001000000000000000000001011001; --   j rest_of_save_pattern

0145 : 00111000011001100000010111011100; --   sw $r1, 1500($19)

0146 : 00101100111001100000000000000001; --   addi $r19, $r19, 1 #incrememnt counter

0147 : 00001000000000000000000001001100; --   j save_pattern

0148 : 00111000011110100000010111011100; --   sw $r1, 1500($r29)

0149 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0150 : 00001000000000000000000001011001; --   j rest_of_save_pattern

0151 : 00101111010000000000000000000000; --   addi $r29, $r0, 0 #increment counter for save pattern

0152 : 00101001000000000000000000000010; --   addi $r4, $r0, 2 #update screen in processor

0153 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0154 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0155 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0156 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0157 : 00111001000000000000000000000011; --   sw $r4, 3($r0) #output new screen to verilog

0158 : 01000000110000000000000000000010; --   lw $r3, 2($r0) #controller input

0159 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0160 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0161 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0162 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0163 : 00010000110000000000000000000000; --   bne $r3, $r0, rest_of_load_pattern #so that $r3 value isn't overwritten

0164 : 00101011110000000000000000000001; --   addi $r15, $r0, 1 #back button/end saving

0165 : 00101100000000000000000000000010; --   addi $r16, $r0, 2 #save first location

0166 : 00101100010000000000000000000100; --   addi $r17, $r0, 4 #save second location

0167 : 00101100100000000000000000001000; --   addi $r18, $r0, 8 #save third location

0168 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0169 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0170 : 00000011110001101111000000001000; --   and $r15, $r3, $r15 #compare controller value to different cases

0171 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0172 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0173 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0174 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0175 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0176 : 00010011110000011111111101101001; --   bne $r15, $r0, splash_transition #back button hit, go to dummy screen

0177 : 00000100111000110010000000001100; --   or $r19, $r17, $r18 #any of next 3 buttons, valid save location (checks first 2)

0178 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0179 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0180 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0181 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0182 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0183 : 00000100111000010011000000001100; --   or $r19, $r16, $r19  #(checks third save location)

0184 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0185 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0186 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0187 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0188 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0189 : 00000100111001100011000000001000; --   and $r19, $r19, $r3 #19 has if valid save location

0190 : 00000100010000100000000000001000; --   and $r17, $r1, $r0 #is 1 empty?

0191 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0192 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0193 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0194 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0195 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0196 : 00000101001001110001000000001000; --   and $r20, $r19, $r17 #selected valid save location and sensor input present

0197 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0198 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0199 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0200 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0201 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0202 : 00010101000000000000000000000001; --   bne $r20, $r0, load_hit

0203 : 00001000000000000000000010100100; -- 	j rest_of_load_pattern

0204 : 00000101010001110000000000001000; --   and $r21, $r3, $r16 #check if controller is first save location

0205 : 00000101100001110001000000001000; --   and $r22, $r3, $r17

0206 : 00000101110001110010000000001000; --   and $r23, $r3, $r18

0207 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0208 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0209 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0210 : 00010000001010100000000000000010; --   bne $r0, $r21, load_first_location

0211 : 00010000001011000000000000001101; --   bne $r0, $r22, load_second_location

0212 : 00010000001011100000000000011000; --   bne $r0, $r23, load_third_location

0213 : 01000110001110100000000111110100; --   lw $r24, 500($r29)

0214 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0215 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0216 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0217 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0218 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0219 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0220 : 00111110000000000000000000000010; --   sw $r24, 2($r0)

0221 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0222 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0223 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0224 : 00001000000000000000000001011001; --   j rest_of_save_pattern

0225 : 01000110001110100000001111101000; --   lw $r24, 1000($r29)

0226 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0227 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0228 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0229 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0230 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0231 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0232 : 00111110000000000000000000000010; --   sw $r24, 2($r0)

0233 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0234 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0235 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0236 : 00001000000000000000000001011001; --   j rest_of_save_pattern

0237 : 01000110001110100000010111011100; --   lw $r24, 1500($r29)

0238 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0239 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0240 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0241 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0242 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0243 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0244 : 00111110000000000000000000000010; --   sw $r24, 2($r0)

0245 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0246 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0247 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0248 : 00001000000000000000000001011001; --   j rest_of_save_pattern

[0249..4095] : 00000000000000000000000000000000;
END;
