DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;
CONTENT
BEGIN
0000 : 01000000110000000000000000000010; --   lw $r3, 2($r0) #check controller input

0001 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0002 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0003 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0004 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0005 : 00010000000001100000000000000101; --   bne $r0, $r3, splash_transition

0006 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0007 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0008 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0009 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0010 : 00001000000000000000000000000000; --   j main #stay on screen until value is inputted

0011 : 00101001000000000000000000000001; --   addi $r4, $r0, 1 #update screen to dummy screen

0012 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0013 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0014 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0015 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0016 : 00111001000000000000000000000011; --   sw $r4, 3($r0) #output new screen to verilog

0017 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0018 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0019 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0020 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0021 : 00001000000000000000000000010110; --   j check_dummy_input

0022 : 01000000110000000000000000000010; --  lw $r3, 2($r0)  #controller input  	#Find controller input

0023 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0024 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0025 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0026 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0027 : 00101001110000000000000000000001; --   addi $r7, $r0, 1 #back mode code for controller #not important for dummy screen

0028 : 00101010000000000000000000000010; --   addi $r8, $r0, 2 #save mode code for controller

0029 : 00101010010000000000000000000100; --   addi $r9, $r0, 4 #load mode code for controller

0030 : 00101010100000000000000000001000; --   addi $r10 $r0, 8 #play mode code for controller

0031 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0032 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0033 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0034 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0035 : 00000010110001101000000000001000; --   and $r11, $r3, $r8 # are saving?

0036 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0037 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0038 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0039 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0040 : 00010010110000000000000000010001; --   bne $r11, $r0, save_pattern

0041 : 00000011000001101001000000001000; --   and $r12, $r3, $r9 #are loading?

0042 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0043 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0044 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0045 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0046 : 00010011000000000000000010000001; --   bne $r12, $r0, load_pattern

0047 : 00000011010001101010000000001000; --   and $r13, $r3, $r10

0048 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0049 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0050 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0051 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0052 : 00010011010000000000000011100111; --   bne $r13, $r0, play_game

0053 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0054 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0055 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0056 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0057 : 00001000000000000000000000010110; --   j check_dummy_input

0058 : 00101111010000000000000000000000; --   addi $r29, $r0, 0 #increment counter for save pattern

0059 : 00101001000000000000000000000010; --   addi $r4, $r0, 2 #update screen in processor

0060 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0061 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0062 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0063 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0064 : 00111001000000000000000000000011; --   sw $r4, 3($r0) #output new screen to verilog

0065 : 01000000110000000000000000000010; --   lw $r3, 2($r0) #controller input

0066 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0067 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0068 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0069 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0070 : 00010000110000000000000000000001; --   bne $r3, $r0, check_if_controller_one #so that $r3 value isn't overwritten

0071 : 00001000000000000000000000111010; --   j save_pattern

0072 : 01000111000000000000000000000010; --   lw $r28, 2($r0) # get controller but DO NOT OVERRIDE previous controller input

0073 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0074 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0075 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0076 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0077 : 00101110110000000000000000000001; --   addi $r27, $r0, 1

0078 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0079 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0080 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0081 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0082 : 00000110111110011011000000001000; --   and $r27, $r28, $r27

0083 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0084 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0085 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0086 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0087 : 00010110110000011111111110110011; --   bne $r27, $r0, splash_transition

0088 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0089 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0090 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0091 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0092 : 00001000000000000000000001011101; --   j check_new_controller_save

0093 : 01000110110000000000000000000010; --   lw $r27, 2($r0) #new controller input

0094 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0095 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0096 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0097 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0098 : 00010110110001100000000000000101; --   bne $r27, $r3, check_two_four_eight_save

0099 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0100 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0101 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0102 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0103 : 00001000000000000000000001111111; --   j rest_of_save_pattern #it's the same so just save it

0104 : 00101111100000000000000000001110; --   addi $r30, $r0, 14

0105 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0106 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0107 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0108 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0109 : 00000111101101111110000000001000; --   and $r30, $r27, $r30

0110 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0111 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0112 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0113 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0114 : 00010111100000000000000000000101; --   bne $r30, $r0, set_new_location_save

0115 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0116 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0117 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0118 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0119 : 00001000000000000000000001111111; --   j rest_of_save_pattern #not 2,4, 8, then 0 --> do nothing

0120 : 00101000111101100000000000000000; --   addi $r3, $r27, 0

0121 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0122 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0123 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0124 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0125 : 00101111010000000000000000000000; --   addi $r29, $r0, 0

0126 : 00001000000000000000000001111111; --   j rest_of_save_pattern

0127 : 01000000010000000000000000000000; --   lw $r1, 0($r0) #sensor input

0128 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0129 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0130 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0131 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0132 : 00010000010000000000000000000101; --   bne $r1, $r0, save_hit

0133 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0134 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0135 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0136 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0137 : 00001000000000000000000001001000; --   j check_if_controller_one

0138 : 00101100000000000000000000000010; --   addi $r16, $r0, 2

0139 : 00101100010000000000000000000100; --   addi $r17, $r0, 4

0140 : 00101100100000000000000000001000; --   addi $r18, $r0, 8

0141 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0142 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0143 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0144 : 00000101010001110000000000001000; --   and $r21, $r3, $r16 #check if controller is first save location

0145 : 00000101100001110001000000001000; --   and $r22, $r3, $r17

0146 : 00000101110001110010000000001000; --   and $r23, $r3, $r18

0147 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0148 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0149 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0150 : 00010000001010100000000000000111; --   bne $r0, $r21, save_first_location

0151 : 00010000001011000000000000001100; --   bne $r0, $r22, save_second_location

0152 : 00010000001011100000000000010001; --   bne $r0, $r23, save_third_location

0153 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0154 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0155 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0156 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0157 : 00001000000000000000000001111111; --   j rest_of_save_pattern

0158 : 00111000011110100000000111110100; --   sw $r1, 500($r29)

0159 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0160 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0161 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0162 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0163 : 00001000000000000000000001111111; --   j rest_of_save_pattern

0164 : 00111000011110100000001111101000; --   sw $r1, 1000($r29)

0165 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0166 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0167 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0168 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0169 : 00001000000000000000000001111111; --   j rest_of_save_pattern

0170 : 00111000011110100000010111011100; --   sw $r1, 1500($r29)

0171 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0172 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0173 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0174 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0175 : 00001000000000000000000001111111; --   j rest_of_save_pattern

0176 : 00101111010000000000000000000000; --   addi $r29, $r0, 0 #increment counter for save pattern

0177 : 00101001000000000000000000000010; --   addi $r4, $r0, 2 #update screen in processor

0178 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0179 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0180 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0181 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0182 : 00111001000000000000000000000011; --   sw $r4, 3($r0) #output new screen to verilog

0183 : 01000000110000000000000000000010; --   lw $r3, 2($r0) #controller input

0184 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0185 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0186 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0187 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0188 : 00010000110000000000000000000000; --   bne $r3, $r0, check_if_controller_one_load #so that $r3 value isn't overwritten

0189 : 00101011110000000000000000000001; --   addi $r15, $r0, 1 #back button/end saving

0190 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0191 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0192 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0193 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0194 : 00000011110001101111000000001000; --   and $r15, $r3, $r15 #compare controller value to different cases

0195 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0196 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0197 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0198 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0199 : 00010011110000011111111101000011; --   bne $r15, $r0, splash_transition #back button hit, go to dummy screen

0200 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0201 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0202 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0203 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0204 : 00001000000000000000000011001101; --   j check_new_controller

0205 : 01000110110000000000000000000010; --   lw $r27, 2($r0) #new controller input

0206 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0207 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0208 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0209 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0210 : 00010110110001100000000000000101; --   bne $r27, $r3, check_two_four_eight

0211 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0212 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0213 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0214 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0215 : 00001000000000000000000011101111; --   j load_hit #it's the same so just load it

0216 : 00101111100000000000000000001110; --   addi $r30, $r0, 14

0217 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0218 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0219 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0220 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0221 : 00000111101101111110000000001000; --   and $r30, $r27, $r30

0222 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0223 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0224 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0225 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0226 : 00010111100000000000000000000101; --   bne $r30, $r0, set_new_location

0227 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0228 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0229 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0230 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0231 : 00001000000000000000000011101111; --   j load_hit #not 2,4, 8, then 0 --> do nothing

0232 : 00101000111101100000000000000000; --   addi $r3, $r27, 0

0233 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0234 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0235 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0236 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0237 : 00101111010000000000000000000000; --   addi $r29, $r0, 0

0238 : 00001000000000000000000011101111; --   j load_hit

0239 : 00000101010001110000000000001000; --   and $r21, $r3, $r16 #check if controller is first save location

0240 : 00000101100001110001000000001000; --   and $r22, $r3, $r17

0241 : 00000101110001110010000000001000; --   and $r23, $r3, $r18

0242 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0243 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0244 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0245 : 00010000001010100000000000000010; --   bne $r0, $r21, load_first_location

0246 : 00010000001011000000000000001101; --   bne $r0, $r22, load_second_location

0247 : 00010000001011100000000000011000; --   bne $r0, $r23, load_third_location

0248 : 01000110001110100000000111110100; --   lw $r24, 500($r29)

0249 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0250 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0251 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0252 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0253 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0254 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0255 : 00111110000000000000000000000001; --   sw $r24, 1($r0) # output to verilog

0256 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0257 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0258 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0259 : 00001000000000000000000010111101; --   j check_if_controller_one_load

0260 : 01000110001110100000001111101000; --   lw $r24, 1000($r29)

0261 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0262 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0263 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0264 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0265 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0266 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0267 : 00111110000000000000000000000001; --   sw $r24, 1($r0)

0268 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0269 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0270 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0271 : 00001000000000000000000010111101; --   j check_if_controller_one_load

0272 : 01000110001110100000010111011100; --   lw $r24, 1500($r29)

0273 : 00101111011110100000000000000001; --   addi $r29, $r29, 1 #incrememnt counter

0274 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0275 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0276 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0277 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0278 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0279 : 00111110000000000000000000000001; --   sw $r24, 1($r0)

0280 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0281 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0282 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0283 : 00001000000000000000000010111101; --   j check_if_controller_one_load

0284 : 00101001000000000000000000000011; --   addi $r4, $r0, 3 #update screen in processor

0285 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0286 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0287 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0288 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0289 : 00111001000000000000000000000011; --   sw $r4, 3($r0) #output new screen to verilog

0290 : 01000110110000000000000000000010; --   lw $r27, 2($r0) #new controller input

0291 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0292 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0293 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0294 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0295 : 00101111000000000000000000000001; --   addi $r28, $r0, 1

0296 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0297 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0298 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0299 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0300 : 00000111001101111100000000001000; --   and $r28, $r27, $r28

0301 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0302 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0303 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0304 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0305 : 00010111000000011111111011011001; --   bne $r28, $r0, splash_transition

0306 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0307 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0308 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0309 : 00000000000000000000000000000000; --   addi $r0, $r0, 0

0310 : 00001000000000000000000100011100; --   j play_game

[0311..4095] : 00000000000000000000000000000000;
END;
